generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
  PREMIUM_USER
}

enum Templates {
  REACT
  NEXTJS
  EXPRESS
  VUE
  HONO
  ANGULAR
}

model User {
  id               String       @id @default(cuid())
  name             String?
  email            String       @unique
  image            String?
  role             UserRole     @default(USER)
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt

  myPlayground     Playground[]
  staredPlayground StarMark[]

  accounts         Account[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt

  user              User         @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Playground {
  id          String      @id @default(cuid())
  title       String
  description String?
  template    Templates   @default(REACT)
  templateFiles TemplateFile[]
  userId      String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  Starmark    StarMark[]
}

model TemplateFile {
  id          String      @id @default(cuid())
  content     Json
  playgroundId String     @unique
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  playground  Playground  @relation(fields: [playgroundId], references: [id], onDelete: Cascade)
}

model StarMark {
  id            String      @id @default(cuid())
  userId        String
  playgroundId  String
  isMarked      Boolean
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  playground    Playground  @relation(fields: [playgroundId], references: [id], onDelete: Cascade)

  @@unique([userId, playgroundId])
}
